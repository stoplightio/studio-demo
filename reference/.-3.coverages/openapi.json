{
  "swagger" : "2.0",
  "info" : {
    "description" : "**Description:**  Horizon coverage pertaining to a member or subscriber\n\n| Version | Date | Change |\n| -------- | -------- | -------- |\n| 1.0     | 03/17/2017     | Original Version  Approved Version    |\n| 1.1.1     | 04/24/2017     | Updated Header X-HZN-UserToken, X-HZN-RequestingsubscriberId, X-HZN-RequestingMemberId and X-HZN-RootId   |\n|      |      | Added Prefix and Suffix    |\n|      |      | Added idCardScope    |\n|      |      | Added alphaPrefix pertaining to given coverage/subscriber cardid   |\n|      |      | Made memberId and coverageToken Required     |\n|1.1.2    | 06/05/2017     | Removed X-HZN-RequestingsubscriberId and  status 408   |\n|1.1.3    | 06/06/2017     | Removed status 401   |\n| 1.1     | 06/07/2017     | Approved version   |\n| 1.2.1     | 07/24/2017     | Updated token to id  |\n| 1.2.2     | 07/25/2017     |Updated per ADGQ feedback |\n| 1.3.1   | 08/03/2017     | Update to remove \"internal\" resources and changes to AuthorizedMember functionality\n|    |    | Moved premium subsidy out of the internal property\n|    |    | Removed X-HZN-ClientTimeout|\n| 1.3.2   |08/07/2017    | Added accounts (FSA HRA HSA) to coverage response|\n| 1.3.3   |08/08/2017    | Updated  X-HZN-RequestingMemberId description|\n| 1.3.4   |08/16/2017    | Updated  from DateTime to Date on input for start and end date|\n| 1.3.5   |08/21/2017    | Updated the allowedAccess array to just a simple array of strings instead of the scope object which was adding an extra level in the code |\n| 1.3.6   |09/25/2017    | Updated Alternate Id to array on  coverages response|\n| 1.3  |10/15/2017    | Approved|\n| 1.4.1  |11/29/2017    | Added matchType and  firstName and lastName wildcard and 206 Partial to memberSearchInput members/coverages/search|\n| 1.4.2  |12/01/2017    | Updated per ADGQ feedback Removed 206,  Added high level routeCode to responseCoverages. Marked /members/coverages/search as deprecated|\n| 1.4.3  |12/20/2017    | Updated cardId to mention alha numeric prefix instead of alpha prefix|\n| 1.4  |12/21/2017    | Approved|\n| 1.5.1  |01/10/2018    | Updated allowedAccess to array of string instead of simply string|\n| 1.5.2  |04/10/2018    | Added 3 new endpoints to enable search by susbcriberId|\n| 1.5.3  |05/02/2018    | Implemented ADGQ Comments|\n| 1.5     |05/14/2018    | Approved|\n| 1.6.1  |06/18/2018    | Added route code, team details and processing system detials |\n| 1.6.2  |06/21/2018    | Added premiumPaymentIndicator to the subscribers/coverages request query params and request body, added premiumPaymentIndicator to the subscribers/coverages response at the member level |\n| 1.6.3  |06/25/2018    | Removed premiumPaymentIndicator from request and response. To be handled in the facade layer |\n| 1.6.4  |06/26/2018    | Implemented ADGQ comments |\n| 1.6      |07/25/2018    | Approved |\n| 1.7.1  |07/25/2018    | Updated to add Employment Type |\n| 1.7      |08/13/2018    | Approved|\n| 1.8.1      |09/12/2018    | Updated to add medigapIndicator|\n| 1.8      |09/19/2018    | Approved|\n| 1.9.1  |08/22/2018    | Added the CDH Account Type Code (MyWay, Compatible), changed the accounts from an array of strings to a string that will have HSA or HRA now and FSA in the future and renamed accounts to account|\n| 1.9.2  |09/06/2018    | Removed 'in the future' for FSA in account field description, renamed account back to accounts and changed accounts from string back to array of strings|\n| 1.9.3  |09/07/2018    | Added note to Accounts description and moved employmentType object under common section|\n| 1.9.4  |09/18/2018    | Retrofitted v1.8.1 changes|\n| 1.9.5  |09/19/2018    | Added the CDH Account Type Code (MyWay, Compatible) & added note to Accounts description under coverage |\n| 1.9  |09/26/2018    | Approved |\n| 1.10.1  |11/14/2018    | Updated Employment Type - effectiveDate and endDate from String to Date|\n| 1.10  | 11/14/2018    | Approved |\n| 1.11.1  | 11/16/2018    | Added Section Value to \"includeFSA\" to return FSA Data along with coverages for all endpoints  |\n| 1.11.2  | 11/30/2018    | Updated as per review  |\n| 1.11  |MM/DD/YYYY    | Placeholder for approval |\n| 1.12.1  | 12/03/2018    | For POST subscribers/search, updated the search capability with subscriberId, memberId and personId |\n| 1.12.2  | 01/07/2019    | Added new  POST members/coverages/search and added personId to responseCoverage, responseCoverages | \n| 1.12.3  | 01/14/2019    | Updated memberId and personId single data elements to arrays for POST members/coverages/search as per ADGQ comments | \n| 1.12 | 01/30/2019    | Approved the changes for the  POST members/coverages/search  | \n| 1.13.1 | 01/23/2019    | Added originalEffectiveDate to member, responseCoverage, responseCoverages | \n| 1.13 | 01/30/2019    | Approved for the changes made to addthe member's  originalEffectiveDate  to all the operations | \n| 1.14.1  | 01/24/2019    | Incorporated  hipaaRuleVersion element to responseSubscribers in subscriber/coverages endpoints GET /subscribers/{subscriberId}/coverages , GET /subscribers/{subscriberId}/coverages/{coverageId} and POST subscribers/coverages/search changes to this version | \n |1.14  | 01/30/2019    | Approved the changes made for  addition of the data object 'hipaaRuleVersion' added to all the subscriber coverage operations |\n |1.15.1  | 02/06/2019    |Removed fault from 200 responseSubscribers object from subscriber /coverages end points |\n  |1.15  | 03/28/2019    |Removed fault from 200 responseSubscribers object from subscriber /coverages end points |\n  |1.16.1  | 03/28/2019    |Added terminationReason and pcpRequiredIndicator to coverages and subscriberCoverages |\n  |1.16 | 04/10/2019    | Approved |\n|1.17.1| 05/09/2019    | Added Termination Reason Code |\n|1.17.2| 05/09/2019    | Removed  Termination Reason and Termination Reason Code as these will be exposed in the accounts API |\n|1.17 | 06/10/2019    | Approved |\n|1.18.1| 07/15/2019    | Added cacheLastUpdated to all  responses |\n|1.18 | 07/30/2019    | Approved |\n\n\t",
    "version" : "1.18",
    "title" : "../coverages",
    "termsOfService" : "",
    "contact" : {
      "name" : ""
    }
  },
  "host" : "api.horizonblue.com",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "paths" : {
    "/subscribers/{subscriberId}/coverages" : {
      "get" : {
        "tags" : [ "Coverages" ],
        "summary" : "coverages",
        "description" : "* **Purpose**: To retrieve a collection of coverages for all the members under a specific subscriber based upon the subscriber ids\n* **Prerequisite**:  subscriberId from /subscriber API\n* **Validation**: None\n* **Design Pattern**: Synchronous\n* **Output**: coverages collection\n* **Error Notification**: Various http errors and faults. \nIf no records match the search input, a http 200 will be returned with an empty coverages collection.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "lineOfBusiness",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Line of business.  \n\nValues: \n* Medical\n* Dental\n* Vision\n*  Pharmacy Prescription Rx\n*  Mental Health  (future use)",
          "x-example" : "lineOfBusiness=Medical"
        }, {
          "name" : "searchStartDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "The start date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If searchStartDate is not supplied, all coverages less than or equal to the searchEndDate will be returned.  \n*  If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n*  If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**ISO 8601 Format of yyyy-MM-dd**",
          "x-example" : "searchStartDate=2017-02-07"
        }, {
          "name" : "searchEndDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "The end date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If not supplied, all coverages greater than or equal to the searchStartDate will be returned.  \n* If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n* If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**ISO 8601 Format of yyyy-MM-dd**",
          "x-example" : "searchEndDate=2017-02-07"
        }, {
          "name" : "allowedAccess",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Comma separated list of scope that the response should be filtered to.  Current values include:\n\n* **SelfService** - such services as Member Portal. \n* **ViewPHI** - such services as Member Portal.\n* **All** - such services as Member Portal.    \n* **GetCare** - for such services as Pager and types of services that support the members care",
          "x-example" : "allowedAccess=SelfService,GetCare"
        }, {
          "name" : "relationship",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Relationship to the subscriber. \n\nValues: \n* Self    (this identifies the subscriber)\n* Dependents (all members except subscriber)\n* Spouse\n* Child\n* Adult Dependent\n* Class II or Sponsored\n* Dependents over 30 not covered under Subscriber\n* Handicap Child\n* Life Partner\n* Other Relationship\n* Unknown"
        }, {
          "name" : "filters",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Comma separated list of available filters.  The current filters are:\n* **summary** - returns a minimal set of data, mainly made up of the name, ids, relationship and contract",
          "x-example" : "filters=summary"
        }, {
          "name" : "sections",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Comma separated list of available sections.  The current sections are:\n* **routecode** - returns  the route code and processing system details\n* **teamdetails** - returns the vdn details from RCOE.\n* **includeFSA** - returns additional FSA coverage details",
          "x-example" : "sections=routecode,teamdetails"
        }, {
          "name" : "X-HZN-ClientName",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "Name of the client"
        }, {
          "name" : "X-HZN-ClientSubmitDateTime",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "format" : "date-time",
          "description" : "Date/Time from the client in ISO 8601 date format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        }, {
          "name" : "X-HZN-ClientTransactionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Unique client transaction Id"
        }, {
          "name" : "X-HZN-ClientSessionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Client session id"
        }, {
          "name" : "X-HZN-UserId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Logged in user id - needed for additional tracking."
        }, {
          "name" : "X-HZN-UserRole",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "User role -  Role of the user. \nExamples: Subscriber, Member, Member Liaison, Provider, Provider Liaison, Internal User"
        }, {
          "name" : "X-HZN-RequestingMemberId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** \nCurrent logged in memberId. \nFor a B2C process, this value will be set based upon the value in the JWT\nFor a B2B process, this value must either be set by the calling client or from the JWT. Note, if the JWT value is populated, it will override the value passed in by the client."
        }, {
          "name" : "X-HZN-RootId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** An internal identifier for the end to end correlation of the API and its related services."
        }, {
          "name" : "X-HZN-Internal",
          "in" : "header",
          "required" : false,
          "type" : "boolean",
          "description" : "**for internal use only** True if the client has been authorized for internal properties.  Otherwise, the properties marked for **internal only** will not be returned."
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of coverages associated to all members under a requested subscriber",
            "schema" : {
              "$ref" : "#/definitions/responseSubscribers"
            }
          },
          "206" : {
            "description" : "Partial Response",
            "schema" : {
              "$ref" : "#/definitions/responseSubscribersPartial"
            }
          },
          "404" : {
            "description" : "Invalid Input Parameter – Not Authorized for this data"
          },
          "422" : {
            "description" : "Unprocessable Entity - Used for request structure validation errors.",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "500" : {
            "description" : "General internal processing error(s).",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "504" : {
            "description" : "API did not receive a response in the stipulated time frame from the backend systems",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "subscriberId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Unique subscriber identifier Note: This is a transient value"
      } ]
    },
    "/subscribers/{subscriberId}/coverages/{coverageId}" : {
      "get" : {
        "tags" : [ "Coverage" ],
        "summary" : "coverage",
        "description" : "* **Purpose**: To retrieve a the requested of coverage details for all the members under a specific subscriber based upon the subscriber id and coverage id\n* **Prerequisite**:  subscriberId from /subscribers API, coverageToken from /subscribers/coverages\n* **Validation**: Valid subscriber and coverage id\n* **Design Pattern**: Synchronous\n* **Output**: coverage\n* **Error Notification**: Various http errors and faults. ",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "allowedAccess",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Comma separated list of scope that the response should be filtered to.  Current values include:\n\n* **SelfService** - such services as Member Portal.\n* **ViewPHI** - such services as Member Portal.    \n* **GetCare** - for such services as Pager and types of services that support the members care\n* **All** - such services as Member Portal.",
          "x-example" : "allowedAccess=SelfService,GetCare, ViewPHI,All"
        }, {
          "name" : "relationship",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Relationship to the subscriber. \n\nValues: \n* Self    (this identifies the subscriber)\n* Dependents (all members except subscriber)\n* Spouse\n* Child\n* Adult Dependent\n* Class II or Sponsored\n* Dependents over 30 not covered under Subscriber\n* Handicap Child\n* Life Partner\n* Other Relationship\n* Unknown"
        }, {
          "name" : "filters",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Comma separated list of available filters.  The current filters are:\n* **summary** - returns a minimal set of data, mainly made up of the name, ids, relationship and contract"
        }, {
          "name" : "sections",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Comma separated list of available sections.  The current sections are:\n* **routecode** - returns  the route code and processing system details\n* **teamdetails** - returns the vdn details from RCOE.\n* **includeFSA** - returns additional FSA coverage details",
          "x-example" : "sections=routecode,teamdetails"
        }, {
          "name" : "X-HZN-ClientName",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "Name of the client"
        }, {
          "name" : "X-HZN-ClientSubmitDateTime",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "format" : "date-time",
          "description" : "Date/Time from the client in ISO 8601 date format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        }, {
          "name" : "X-HZN-ClientTransactionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Unique client transaction Id"
        }, {
          "name" : "X-HZN-ClientSessionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Client session id"
        }, {
          "name" : "X-HZN-UserId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Logged in user id - needed for additional tracking."
        }, {
          "name" : "X-HZN-UserRole",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "User role -  Role of the user. \nExamples: Subscriber, Member, Member Liaison, Provider, Provider Liaison, Internal User"
        }, {
          "name" : "X-HZN-RequestingMemberId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** \nCurrent logged in memberId. \nFor a B2C process, this value will be set based upon the value in the JWT\nFor a B2B process, this value must either be set by the calling client or from the JWT. Note, if the JWT value is populated, it will override the value passed in by the client."
        }, {
          "name" : "X-HZN-RootId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** An internal identifier for the end to end correlation of the API and its related services."
        }, {
          "name" : "X-HZN-Internal",
          "in" : "header",
          "required" : false,
          "type" : "boolean",
          "description" : "**for internal use only** True if the client has been authorized for internal properties.  Otherwise, the properties marked for **internal only** will not be returned."
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of coverages associated to all members or a specific  member under a requested subscriber",
            "schema" : {
              "$ref" : "#/definitions/responseSubscribers"
            }
          },
          "206" : {
            "description" : "Partial Response",
            "schema" : {
              "$ref" : "#/definitions/responseSubscribersPartial"
            }
          },
          "404" : {
            "description" : "Invalid Input Parameter – Not Authorized for this data",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "422" : {
            "description" : "Unprocessable Entity - Used for request structure validation errors."
          },
          "500" : {
            "description" : "General internal processing error(s).",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "504" : {
            "description" : "API did not receive a response in the stipulated time frame from the backend systems",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "subscriberId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Unique Subscriber identifier Note: This is a transient value"
      }, {
        "name" : "coverageId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Unique Coverage identifier Note: This is a transient value"
      } ]
    },
    "/subscribers/coverages/search" : {
      "post" : {
        "tags" : [ "subscriber Coverages" ],
        "summary" : "subscribers/coverage search",
        "description" : "* **Purpose**: To retrieve the subscriber's details along with the collection of members and their coverages based upon the search parameters\n* **Prerequisite**:  None\n* **Validation**: Valid search parameters, minimum of cardId or horizonId\n* **Design Pattern**: Synchronous\n* **Output**:  a collection of subscriber along with corresponding members and their coverages\n* **Error Notification**: Various http errors and faults. \nIf no records match the search input, a http 200 will be returned with an empty subscriber collection.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-HZN-ClientName",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "Name of the client"
        }, {
          "name" : "X-HZN-ClientSubmitDateTime",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "format" : "date-time",
          "description" : "Date/Time from the client in ISO 8601 date format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        }, {
          "name" : "X-HZN-ClientTransactionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Unique client transaction Id"
        }, {
          "name" : "X-HZN-ClientSessionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Client session id"
        }, {
          "name" : "X-HZN-UserId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Logged in user id - needed for additional tracking."
        }, {
          "name" : "X-HZN-UserRole",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "User role -  Role of the user. \nExamples: Subscriber, Member, Member Liaison, Provider, Provider Liaison, Internal User"
        }, {
          "name" : "X-HZN-RequestingMemberId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** \nCurrent logged in memberId. \nFor a B2C process, this value will be set based upon the value in the JWT\nFor a B2B process, this value must either be set by the calling client or from the JWT. Note, if the JWT value is populated, it will override the value passed in by the client."
        }, {
          "name" : "X-HZN-RootId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** An internal identifier for the end to end correlation of the API and its related services."
        }, {
          "name" : "X-HZN-Internal",
          "in" : "header",
          "required" : false,
          "type" : "boolean",
          "description" : "**for internal use only** True if the client has been authorized for internal properties.  Otherwise, the properties marked for **internal only** will not be returned."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/subscriberCoverageSearchInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of coverages associated to all members or a specific  member under a requested subscriber",
            "schema" : {
              "$ref" : "#/definitions/responseSubscribers"
            }
          },
          "206" : {
            "description" : "Partial Response",
            "schema" : {
              "$ref" : "#/definitions/responseSubscribersPartial"
            }
          },
          "404" : {
            "description" : "Invalid Input Parameter – Not Authorized for this data",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "422" : {
            "description" : "Unprocessable Entity - Used for request structure validation errors.",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "500" : {
            "description" : "General internal processing error(s).",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "504" : {
            "description" : "API did not receive a response in the stipulated time frame from the backend systems",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          }
        }
      }
    },
    "/members/{memberId}/coverages" : {
      "get" : {
        "tags" : [ "Coverages" ],
        "summary" : "coverages",
        "description" : "* **Purpose**: To retrieve a collection of coverages for a specific member based upon the member ids\n* **Prerequisite**:  memberId from /members API\n* **Validation**: Valid member id\n* **Design Pattern**: Synchronous\n* **Output**: coverages collection\n* **Error Notification**: Various http errors and faults. \nIf no records match the search input, a http 200 will be returned with an empty coverages collection.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Filter to a specific subscriber"
        }, {
          "name" : "lineOfBusiness",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Line of business.  \n\nValues: \n* Medical\n* Dental\n* Vision\n*  Pharmacy Prescription Rx\n*  Mental Health  (future use)",
          "x-example" : "lineOfBusiness=health"
        }, {
          "name" : "searchStartDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "The start date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If searchStartDate is not supplied, all coverages less than or equal to the searchEndDate will be returned.  \n*  If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n*  If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**ISO 8601 Format of yyyy-MM-dd**",
          "x-example" : "searchStartDate=2017-02-07"
        }, {
          "name" : "searchEndDate",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "The end date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If not supplied, all coverages greater than or equal to the searchStartDate will be returned.  \n* If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n* If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**ISO 8601 Format of yyyy-MM-dd**",
          "x-example" : "searchEndDate=2017-02-07"
        }, {
          "name" : "allowedAccess",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Comma separated list of scope that the response should be filtered to.  Current values include:\n\n* **SelfService** - such services as Member Portal.   \n* **ViewPHI** - such services as Member Portal. \n* **GetCare** - for such services as Pager and types of services that support the members care\n* **All** - such services as Member Portal.",
          "x-example" : "allowedAccess=SelfService,GetCare,ViewPHI,All"
        }, {
          "name" : "sections",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "* **includeFSA** - returns additional FSA coverage details",
          "x-example" : "sections = includeFSA"
        }, {
          "name" : "X-HZN-ClientName",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "Name of the client"
        }, {
          "name" : "X-HZN-ClientSubmitDateTime",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "format" : "date-time",
          "description" : "Date/Time from the client in ISO 8601 date format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        }, {
          "name" : "X-HZN-ClientTransactionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Unique client transaction Id"
        }, {
          "name" : "X-HZN-ClientSessionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Client session id"
        }, {
          "name" : "X-HZN-UserId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Logged in user id - needed for additional tracking."
        }, {
          "name" : "X-HZN-UserRole",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "User role -  Role of the user. \nExamples: Subscriber, Member, Member Liaison, Provider, Provider Liaison, Internal User"
        }, {
          "name" : "X-HZN-RequestingMemberId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** \nCurrent logged in memberId. \nFor a B2C process, this value will be set based upon the value in the JWT\nFor a B2B process, this value must either be set by the calling client or from the JWT. Note, if the JWT value is populated, it will override the value passed in by the client."
        }, {
          "name" : "X-HZN-RootId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** An internal identifier for the end to end correlation of the API and its related services."
        }, {
          "name" : "X-HZN-Internal",
          "in" : "header",
          "required" : false,
          "type" : "boolean",
          "description" : "**for internal use only** True if the client has been authorized for internal properties.  Otherwise, the properties marked for **internal only** will not be returned."
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of coverages associated to a member",
            "schema" : {
              "$ref" : "#/definitions/responseCoverages"
            }
          },
          "404" : {
            "description" : "Invalid Input Parameter – Not Authorized for this data"
          },
          "422" : {
            "description" : "Unprocessable Entity - Used for request structure validation errors.",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "500" : {
            "description" : "General internal processing error(s).",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "504" : {
            "description" : "API did not receive a response in the stipulated time frame from the backend systems",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "memberId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Unique Member identifier Note: This is a transient value"
      } ]
    },
    "/members/{memberId}/coverages/{coverageId}" : {
      "get" : {
        "tags" : [ "Coverage" ],
        "summary" : "coverage",
        "description" : "* **Purpose**: To retrieve a coverage for a specific member based upon the member and coverage ids\n* **Prerequisite**:  memberId from /members API, coverageToken from /members/coverages\n* **Validation**: Valid member and coverage id\n* **Design Pattern**: Synchronous\n* **Output**: coverage\n* **Error Notification**: Various http errors and faults. ",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "allowedAccess",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Comma separated list of scope that the response should be filtered to.  Current values include:\n\n* **SelfService** - such services as Member Portal.   \n* **ViewPHI** - such services as Member Portal. \n* **GetCare** - for such services as Pager and types of services that support the members care\n* **All** - such services as Member Portal.",
          "x-example" : "allowedAccess=SelfService,GetCare,ViewPHI,All"
        }, {
          "name" : "sections",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "* **includeFSA** - returns additional FSA coverage details",
          "x-example" : "sections=includeFSA"
        }, {
          "name" : "X-HZN-ClientName",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "Name of the client"
        }, {
          "name" : "X-HZN-ClientSubmitDateTime",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "format" : "date-time",
          "description" : "Date/Time from the client in ISO 8601 date format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        }, {
          "name" : "X-HZN-ClientTransactionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Unique client transaction Id"
        }, {
          "name" : "X-HZN-ClientSessionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Client session id"
        }, {
          "name" : "X-HZN-UserId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Logged in user id - needed for additional tracking."
        }, {
          "name" : "X-HZN-UserRole",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "User role -  Role of the user. \nExamples: Subscriber, Member, Member Liaison, Provider, Provider Liaison, Internal User"
        }, {
          "name" : "X-HZN-RequestingMemberId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** \nCurrent logged in memberId. \nFor a B2C process, this value will be set based upon the value in the JWT\nFor a B2B process, this value must either be set by the calling client or from the JWT. Note, if the JWT value is populated, it will override the value passed in by the client."
        }, {
          "name" : "X-HZN-RootId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** An internal identifier for the end to end correlation of the API and its related services."
        }, {
          "name" : "X-HZN-Internal",
          "in" : "header",
          "required" : false,
          "type" : "boolean",
          "description" : "**for internal use only** True if the client has been authorized for internal properties.  Otherwise, the properties marked for **internal only** will not be returned."
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single coverage associated to a member",
            "schema" : {
              "$ref" : "#/definitions/responseCoverage"
            }
          },
          "404" : {
            "description" : "Invalid Input Parameter – Not Authorized for this data",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "422" : {
            "description" : "Unprocessable Entity - Used for request structure validation errors."
          },
          "500" : {
            "description" : "General internal processing error(s).",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "504" : {
            "description" : "API did not receive a response in the stipulated time frame from the backend systems",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "memberId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Unique Member identifier Note: This is a transient value"
      }, {
        "name" : "coverageId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Unique Coverage identifier Note: This is a transient value"
      } ]
    },
    "/members/{memberId}/coverages/search" : {
      "post" : {
        "tags" : [ "Coverages" ],
        "summary" : "coverage search",
        "description" : "* **Purpose**: To retrieve a collection of coverages for a specific member based upon the member ids and search parameters\n* **Prerequisite**:  memberId from /members API\n* **Validation**: Valid member id\n* **Design Pattern**: Synchronous\n* **Output**: coverages collection\n* **Error Notification**: Various http errors and faults. \nIf no records match the search input, a http 200 will be returned with an empty coverages collection.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-HZN-ClientName",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "Name of the client"
        }, {
          "name" : "X-HZN-ClientSubmitDateTime",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "format" : "date-time",
          "description" : "Date/Time from the client in ISO 8601 date format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        }, {
          "name" : "X-HZN-ClientTransactionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Unique client transaction Id"
        }, {
          "name" : "X-HZN-ClientSessionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Client session id"
        }, {
          "name" : "X-HZN-UserId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Logged in user id - needed for additional tracking."
        }, {
          "name" : "X-HZN-UserRole",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "User role -  Role of the user. \nExamples: Subscriber, Member, Member Liaison, Provider, Provider Liaison, Internal User"
        }, {
          "name" : "X-HZN-RequestingMemberId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** \nCurrent logged in memberId. \nFor a B2C process, this value will be set based upon the value in the JWT\nFor a B2B process, this value must either be set by the calling client or from the JWT. Note, if the JWT value is populated, it will override the value passed in by the client."
        }, {
          "name" : "X-HZN-RootId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** An internal identifier for the end to end correlation of the API and its related services."
        }, {
          "name" : "X-HZN-Internal",
          "in" : "header",
          "required" : false,
          "type" : "boolean",
          "description" : "**for internal use only** True if the client has been authorized for internal properties.  Otherwise, the properties marked for **internal only** will not be returned."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/coverageSearchInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of coverages associated to a member",
            "schema" : {
              "$ref" : "#/definitions/responseCoverages"
            }
          },
          "404" : {
            "description" : "Invalid Input Parameter – Not Authorized for this data"
          },
          "422" : {
            "description" : "Unprocessable Entity - Used for request structure validation errors.",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "500" : {
            "description" : "General internal processing error(s).",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "504" : {
            "description" : "API did not receive a response in the stipulated time frame from the backend systems",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "memberId",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Unique Member identifier Note: This is a transient value"
      } ]
    },
    "/members/coverages/search" : {
      "post" : {
        "tags" : [ "Coverages" ],
        "summary" : "coverage search",
        "description" : "* **Purpose**: To retrieve a collection of coverages for a specific member based upon the member ids and search parameters\n* **Prerequisite**:  memberId from /members API\n* **Validation**: Valid member id\n* **Design Pattern**: Synchronous\n* **Output**: coverages collection\n* **Error Notification**: Various http errors and faults. \nIf no records match the search input, a http 200 will be returned with an empty coverages collection.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-HZN-ClientName",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "Name of the client"
        }, {
          "name" : "X-HZN-ClientSubmitDateTime",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "format" : "date-time",
          "description" : "Date/Time from the client in ISO 8601 date format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        }, {
          "name" : "X-HZN-ClientTransactionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Unique client transaction Id"
        }, {
          "name" : "X-HZN-ClientSessionId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Client session id"
        }, {
          "name" : "X-HZN-UserId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Logged in user id - needed for additional tracking."
        }, {
          "name" : "X-HZN-UserRole",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "User role -  Role of the user. \nExamples: Subscriber, Member, Member Liaison, Provider, Provider Liaison, Internal User"
        }, {
          "name" : "X-HZN-RequestingMemberId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** \nCurrent logged in memberId. \nFor a B2C process, this value will be set based upon the value in the JWT\nFor a B2B process, this value must either be set by the calling client or from the JWT. Note, if the JWT value is populated, it will override the value passed in by the client."
        }, {
          "name" : "X-HZN-RootId",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "**for internal use only** An internal identifier for the end to end correlation of the API and its related services."
        }, {
          "name" : "X-HZN-Internal",
          "in" : "header",
          "required" : false,
          "type" : "boolean",
          "description" : "**for internal use only** True if the client has been authorized for internal properties.  Otherwise, the properties marked for **internal only** will not be returned."
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/coverageSearchInputBulk"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of coverages associated to a member",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/responseCoverages"
              }
            }
          },
          "206" : {
            "description" : "Return the partial list of memberId / personId  data response found",
            "schema" : {
              "$ref" : "#/definitions/responseMemberCoverages"
            }
          },
          "404" : {
            "description" : "Invalid Input Parameter – Not Authorized for this data"
          },
          "422" : {
            "description" : "Unprocessable Entity - Used for request structure validation errors.",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "500" : {
            "description" : "General internal processing error(s).",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          },
          "504" : {
            "description" : "API did not receive a response in the stipulated time frame from the backend systems",
            "schema" : {
              "$ref" : "#/definitions/responseFailure"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "subscriberCoverage" : {
      "type" : "object",
      "required" : [ "contractType", "coverageId", "effectiveDate", "exchangeIndicator", "lineOfBusiness", "links", "marketSegment", "medicareIndicator", "productId", "productName", "subgroup", "terminationDate" ],
      "properties" : {
        "coverageId" : {
          "type" : "string",
          "description" : "Unique Coverage identifier Note: This is a transient value. It is necessary to make other API calls"
        },
        "alphaPrefix" : {
          "type" : "string",
          "description" : "The contract alpha prefix associated with the given coverage."
        },
        "subgroup" : {
          "$ref" : "#/definitions/subgroup"
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date of the coverage.  This date is inclusive.  \n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "terminationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Termination date of the coverages. This date is inclusive, which means the member has coverage on this day.  \n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "productId" : {
          "type" : "string",
          "description" : "The product id (often referred to as the coverage code).  This will be unique for a given product for consumer and small group for a given time period, however, is not unique for midsize and above."
        },
        "productLineId" : {
          "type" : "string",
          "description" : "Product Line Id\n\n**Not returned when filters=summary**"
        },
        "productName" : {
          "type" : "string",
          "description" : "Product Name"
        },
        "contractType" : {
          "type" : "string",
          "description" : "Contract type.\n\nValues include:\n* Single\n* Family\n* Subscriber Spouse\n* Subscriber Children\n* Domestic Partners\n* Civil Union Partners\n* Husband and Wife, one over 65, one under 65\n* Full Family, one spouse over 65, one under 65"
        },
        "claimProcessingSystemCode" : {
          "type" : "string",
          "description" : "Indicates the Claim System that administers the contract.  \n\nValid values are: ACE BCL ERI HNC HNN HIS HSQ LAT NAS NQH QHS QMA TPA."
        },
        "lineOfBusiness" : {
          "type" : "string",
          "description" : "Line of business.  \n\nValues: \n* Medical\n* Dental\n* Vision\n*  Pharmacy Prescription Rx\n*  Mental Health  (future use)"
        },
        "marketSegment" : {
          "type" : "string",
          "description" : "Market Segment.\n\n**Not returned when filters=summary**\n\nValues: \n* Individual\n* Small\n* Medicaid\n* National\n* Federal\n* State\n* Public\n* Senior\n* MidSize\n* Jumbo\n* Labor"
        },
        "marketSegmentCode" : {
          "type" : "string",
          "description" : "Market Segment Code\n\n**Not returned when filters=summary**"
        },
        "idCardScope" : {
          "type" : "string",
          "description" : "Indicates level of Id Card.\n Values:\n* member\n* family\n\n**Not returned when filters=summary**"
        },
        "medicareIndicator" : {
          "type" : "boolean",
          "description" : "Boolenan indicator if the product is a Medicare product\n\n**Not returned when filters=summary**"
        },
        "medigapIndicator" : {
          "type" : "boolean",
          "description" : "Boolean indicator if the product is a Medigap product\n\n**Not returned when filters=summary**"
        },
        "exchangeIndicator" : {
          "type" : "boolean",
          "description" : "Boolean indicator if this coverage is from the public exchange.  true (On Exchange),  false (Off Exchange)\n\n**Not returned when filters=summary**"
        },
        "pcpRequiredIndicator" : {
          "type" : "boolean",
          "description" : "Boolean indicator if pcp is required  true or false\n\n**Not returned when filters=summary**"
        },
        "metallicProductType" : {
          "type" : "string",
          "description" : "Product metallic level:  Platinum, Gold, Silver, Bronze\n\n**Not returned when filters=summary**"
        },
        "metallicProductSubType" : {
          "type" : "string",
          "description" : "Values for Product SubType\n \n* 0 - Non-Exchange variant \n* 1 - Exchange variant (no CSR) \n* 2 - Open to Indians below 300%FPL \n* 3 - Open to Indians above 300%FPL \n* 4 - 73% AV Level Silver Plan CSR \n* 5 - 87% AV Level Silver Plan CSR \n* 6 - 94% AV Level Silver Plan CSR\n\n**Not returned when filters=summary**"
        },
        "primacy" : {
          "type" : "array",
          "description" : "A collection of the primacy information of the coverage.  Often this will be a single record, however, primacy can change over the life of the coverages, so this will be returned as a collection.\n\n**Not returned when filters=summary**\n\nNote:  Primacy identifies when there are multiple coverages under a single subscriber/cardId.   COB defines across multiple coverages that are under different subscribers/cardIds or even different insurers.",
          "items" : {
            "$ref" : "#/definitions/primacy"
          }
        },
        "alternateIds" : {
          "type" : "array",
          "description" : "A collection of Exchange alternate ids.\n\n**Not returned when filters=summary**",
          "items" : {
            "$ref" : "#/definitions/alternateId"
          }
        },
        "premium" : {
          "$ref" : "#/definitions/premium"
        },
        "internal" : {
          "$ref" : "#/definitions/internal"
        },
        "accounts" : {
          "type" : "array",
          "description" : "Values: FSA, HSA, HRA\n\n**Not returned when filters=summary**\n\n**Note: this indicator signifies that member is eligible to avail the type of spending account listed",
          "items" : {
            "type" : "string"
          }
        },
        "accountCategory" : {
          "type" : "string",
          "description" : "Values for accountCategory\n \n* MyWay - Horizon managed CDHP account\n* Compatible - Non-Horizon managed CDHP account\n \n**Not returned when filters=summary**"
        },
        "employmentType" : {
          "type" : "array",
          "description" : "Employment Type",
          "items" : {
            "$ref" : "#/definitions/employmentType"
          }
        },
        "links" : {
          "type" : "array",
          "description" : "A collection of links",
          "items" : {
            "$ref" : "#/definitions/link"
          }
        }
      },
      "description" : "A single coverage structure - returns both internal and authorizedMembers in addition to all of the coverage properties"
    },
    "subscriberCoverageSearchInput" : {
      "type" : "object",
      "properties" : {
        "cardId" : {
          "type" : "string",
          "description" : "* CCID - for most members or MPL members it would be the 3 character alpha numeric prefix followed by \"74nnnnnnn’ or '3HZNnnnnnnnn'.\n\n\n* **Note : Either of cardId, subscriberId or horizonId should be passed**"
        },
        "subscriberId" : {
          "type" : "string",
          "description" : "Subscriber Id Unique Subscriber identifier Note: This is a transient value.\n\n* **Note : Either of cardId, subscriberId or horizonId should be passed**"
        },
        "horizonId" : {
          "type" : "string",
          "description" : "Horizon Id of the subscriber\n* **Note : Either of cardId, subscriberId or horizonId should be passed**"
        },
        "memberId" : {
          "type" : "string",
          "description" : "This id is an unique Member identifier This is a transient value."
        },
        "personId" : {
          "type" : "string",
          "description" : "Member's unique identifier.  Internally, this is the member GUID."
        },
        "firstName" : {
          "type" : "string",
          "description" : "Member's first name."
        },
        "middleName" : {
          "type" : "string",
          "description" : "Member's middle name."
        },
        "lastName" : {
          "type" : "string",
          "description" : "Member's last name."
        },
        "dob" : {
          "type" : "string",
          "format" : "date",
          "description" : "Member's Date of Birth.\n \n**Format: yyyy-MM-dd**"
        },
        "gender" : {
          "type" : "string",
          "description" : "Member's gender. \n\nValues:\n* Female\n* Male\n* Ambiguous\n* Not Applicable\n* Other\n* Unknown"
        },
        "relationship" : {
          "type" : "string",
          "description" : "Relationship to the subscriber. \n\nValues: \n* Self    (this identifies the subscriber)\n* Dependents (all members except subscriber)\n* Spouse\n* Child\n* Adult Dependent\n* Class II or Sponsored\n* Dependents over 30 not covered under Subscriber\n* Handicap Child\n* Life Partner\n* Other Relationship\n* Unknown"
        },
        "allowedAccess" : {
          "type" : "string",
          "description" : "Comma separated list of scope that the response should be filtered to.  Current values include:\n\n* **SelfService** - such services as Member Portal. \n* **ViewPHI** - such services as Member Portal.\n* **All** - such services as Member Portal.   \n* **GetCare** - for such services as Pager and types of services that support the members care",
          "example" : "allowedAccess=SelfService,GetCare, ViewPHI,All"
        },
        "searchStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If not supplied, all coverages less than or equal to the searchEndDate will be returned.  \n* If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n* If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "searchEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If not supplied, all coverages greater than or equal to the searchStartDate will be returned.  \n* If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n* If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "lineOfBusiness" : {
          "type" : "string",
          "description" : "Line of business.  \n\nValues: \n* Medical\n* Dental\n* Vision\n*  Pharmacy Prescription Rx\n*  Mental Health  (future use)",
          "example" : "lineOfBusiness=Medical"
        },
        "subgroup" : {
          "$ref" : "#/definitions/subgroupSearchInput"
        },
        "matchType" : {
          "type" : "string",
          "description" : "EXACT indicates that an exact match is requested using all submitted search criteria. BEST indicates that the best single match is requested. Business logic applies in selecting the BEST match. firtstName, lastName wildCard search is supported only for EXACT matchType."
        },
        "filters" : {
          "type" : "string",
          "description" : "Comma separated list of available filters.  The current filters are:\n* **summary** - returns a minimal set of data, mainly made up of the name, ids, relationship and contract",
          "example" : "filter=summary"
        },
        "sections" : {
          "type" : "string",
          "description" : "Comma separated list of available sections.  The current sections are:\n* **routecode** - returns  the route code and processing system details\n* **teamdetails** - returns the vdn details from RCOE.\n* **includeFSA** - returns additional FSA coverage details",
          "example" : "sections=routecode,teamdetails"
        }
      },
      "description" : "Input for a subscribers/coverage search"
    },
    "responseSubscribers" : {
      "type" : "object",
      "required" : [ "cardId", "subscriberId" ],
      "properties" : {
        "subscriberId" : {
          "type" : "string",
          "description" : "Unique Subscriber  identifier. Note: This is a transient value. It  is necessary to make other API calls.  This is the member id of the subscriber."
        },
        "cardId" : {
          "type" : "string",
          "description" : "CCID - for most member \"3HZN+nnnnnnnn\"\nFEP members it would be the \"Rnnnnnnnn\" number\nMPL members it would be the 3 character alpha prefix followed by \"74nnnnnnn'"
        },
        "horizonId" : {
          "type" : "string",
          "description" : "**Internal Only:** Horizon Id of the subscriber"
        },
        "ssn" : {
          "type" : "string",
          "description" : "**Internal Only:** Subscriber's SSN.   Format nnnnnnnnn.\n\n**Not returned when filters=summary**"
        },
        "prefix" : {
          "type" : "string",
          "description" : "Subscriber's name prefix\n\n**Not returned when filters=summary**"
        },
        "firstName" : {
          "type" : "string",
          "description" : "Subscriber's first name"
        },
        "middleName" : {
          "type" : "string",
          "description" : "Subscriber's middle name\n\n**Not returned when filters=summary**"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Subscriber's last name"
        },
        "suffix" : {
          "type" : "string",
          "description" : "Subscriber's name suffix\n\n**Not returned when filters=summary**"
        },
        "dob" : {
          "type" : "string",
          "description" : "Subscriber's Date of Birth. Format yyyy-MM-dd\n\n**Not returned when filters=summary**"
        },
        "gender" : {
          "type" : "string",
          "description" : "Member's gender. \n\nValues:\n* Female\n* Male\n* Ambiguous\n* Not Applicable\n* Other\n* Unknown\n\n**Not returned when filters=summary**"
        },
        "routeCode" : {
          "type" : "string",
          "description" : "This is the high-level single route code.\n\n**Returned only when sections=routecode or teamdetails**"
        },
        "claimProcessingSystemCode" : {
          "type" : "string",
          "description" : "This is the high level Claim System that administers the contract.  \n\nValid values are: ACE BCL ERI HNC HNN HIS HSQ LAT NAS NQH QHS QMA TPA.\n\n**Returned only when sections=routecode or teamdetails**"
        },
        "teamDetails" : {
          "$ref" : "#/definitions/teamVdn"
        },
        "typeOfMatch" : {
          "type" : "string",
          "description" : "Indicates  the match result. This is only applicable  when matchType EXACT or BEST received on the request (for /subscribers/coverages/search)\n\nWhen matchType **EXACT** received on request\n* SubscriberId found, Exact Match Failed\n* Successful match\n\nWhen matchType  **BEST** received on request\n* Partial Match on dob \n* Partial Match on firstName\n* Subscriber not found\n* Multiple Matching Members, Best Match Failed\n* SubscriberId Found, Best Match Failed\n* Partial Match on firstName and lastName\n* Successful match\n\n**Returned only for POST /subscribers/coverages/search**"
        },
        "members" : {
          "type" : "array",
          "description" : "A collection of members under this subscriber.  The subscriber will also have a record under this collection.\n\nShould always have at least a single record for the subscriber record.",
          "items" : {
            "$ref" : "#/definitions/member"
          }
        },
        "hipaaRuleVersion" : {
          "type" : "string",
          "description" : "HIPAA rule version\n\n1.0 - access opt out rule\n\n2.0 - role based rule"
        },
        "links" : {
          "type" : "array",
          "description" : "Collection of links.  At this time, a link to the subscribers member API and the subscriber API will be returned.",
          "items" : {
            "$ref" : "#/definitions/link"
          }
        },
        "cacheLastUpdated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Max Date/Time  in ISO 8601 date format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\n\"Z\" - Zulu time of when the Mongo Cache was last updated based on all coverages returned in the response"
        }
      },
      "description" : "A composite subscriber structure"
    },
    "member" : {
      "type" : "object",
      "required" : [ "dob", "firstName", "gender", "lastName", "memberId" ],
      "properties" : {
        "memberId" : {
          "type" : "string",
          "description" : "Member Id. Unique Member identifier. Note: This is a transient value\n  This is needed to call other APIs"
        },
        "personId" : {
          "type" : "string",
          "description" : "**Internal Only:** Member's unique identifier.  Internally, this is the member GUID."
        },
        "prefix" : {
          "type" : "string",
          "description" : "Member name prefix\n\n**Not returned when filters=summary**"
        },
        "firstName" : {
          "type" : "string",
          "description" : "Member's first name"
        },
        "middleName" : {
          "type" : "string",
          "description" : "Member's middle name\n\n**Not returned when filters=summary**"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Member's last name"
        },
        "suffix" : {
          "type" : "string",
          "description" : "Member name suffix\n\n**Not returned when filters=summary**"
        },
        "dob" : {
          "type" : "string",
          "format" : "date",
          "description" : "Member's Date of Birth. \n\n**Format: yyyy-MM-dd**"
        },
        "gender" : {
          "type" : "string",
          "description" : "Member's gender. \n\nValues:\n* Female\n* Male\n* Ambiguous\n* Not Applicable\n* Other\n* Unknown"
        },
        "ssn" : {
          "type" : "string",
          "description" : "**Internal Only:** Member's SSN.   \n\n**Format: nnnnnnnnn**\n\n**Not returned when filters=summary**"
        },
        "relationship" : {
          "type" : "string",
          "description" : "Relationship to the subscriber. \n\nValues: \n* Self    (this identifies the subscriber)\n* Spouse\n* Child\n* Adult Dependent\n* Class II or Sponsored\n* Dependents over 30 not covered under Subscriber\n* Handicap Child\n* Life Partner\n* Other Relationship\n* Unknown"
        },
        "horizonEmployeeIndicator" : {
          "type" : "boolean",
          "description" : "Indicates if Member is a Horizon employee. Will only be returned when True.\n\n**Not returned when filters=summary**"
        },
        "federalExchangeIndicators" : {
          "$ref" : "#/definitions/federalExchangeIndicators"
        },
        "allowedAccess" : {
          "type" : "array",
          "description" : "An array of scope that the current requesting member has for this particular member.  This could be empty or not returned if the requesting member does NOT have any access to this particular member's data.  This is used when applying the allowedAccess filter.\n\nCurrent scope:\n* **SelfService** - such services as Member Portal. \n* **ViewPHI** - such services as Member Portal.\n* **ViewSensitive** - such services as Member Portal.\n* **UpdateMember** - such services as Member Portal. \n* **ViewAsLegalRep** - such services as Member Portal. \n* **ViewAsLimitedRep** - such services as Member Portal.\n* **ViewNoData** - such services as Member Portal.   \n* **GetCare** - for such services as Pager and types of services that support the members care",
          "items" : {
            "type" : "string"
          }
        },
        "coverages" : {
          "type" : "array",
          "description" : "Collection of the member's coverages",
          "items" : {
            "$ref" : "#/definitions/subscriberCoverage"
          }
        },
        "originalEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date  pertaining to the first time a member held coverage at Horizon  across all products, groups, and subgroups. Government programs are excluded.\n  ISO 8601 date in the format yyyy-MM-dd"
        }
      },
      "description" : "A single member structure with authorized members and internal properties."
    },
    "coverageSearchInputBulk" : {
      "type" : "object",
      "properties" : {
        "cardId" : {
          "type" : "string",
          "description" : "CCID - for most member\nFEP members it would be the \"Rnnnnnnnn\" number\nMPL members it would be the 3 character alpha numeric prefix followed by \"74nnnnnnn'\nInternally this can also be used for HorizonId or subscribers SSN"
        },
        "subscriberId" : {
          "type" : "string",
          "description" : "Filter to a specific subscriber by subscriberId. This is a transient Id."
        },
        "memberIds" : {
          "type" : "array",
          "description" : "Array of member IDs - memberId or personId  are conditionally required and mutually exclusive \n\nNote: Limit to 20 memberIds to avoid pagination.",
          "items" : {
            "$ref" : "#/definitions/memberId"
          }
        },
        "personIds" : {
          "type" : "array",
          "description" : "Array of person IDs - personId or memberId  are conditionally required and mutually exclusive\n\nNote: Limit to 20 personIds to avoid pagination.",
          "items" : {
            "$ref" : "#/definitions/personId"
          }
        },
        "subgroup" : {
          "$ref" : "#/definitions/subgroupSearchInput"
        },
        "lineOfBusiness" : {
          "type" : "string",
          "description" : "Line of business.  \n\nValues: \n* Medical\n* Dental\n* Vision\n*  Pharmacy Prescription Rx\n*  Mental Health  (future use)"
        },
        "searchStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If not supplied, all coverages less than or equal to the searchEndDate will be returned.  \n* If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n* If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "searchEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If not supplied, all coverages greater than or equal to the searchStartDate will be returned.  \n* If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n* If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "allowedAccess" : {
          "type" : "string",
          "description" : "Comma separated list of scope that the response should be filtered to.  Current values include:\n\n* **SelfService** - such services as Member Portal.   \n* **ViewPHI** - such services as Member Portal. \n* **GetCare** - for such services as Pager and types of services that support the members care\n* **All** - such services as Member Portal.",
          "example" : "allowedAccess=SelfService,GetCare,ViewPHI,All"
        },
        "sections" : {
          "type" : "string",
          "description" : "* **includeFSA** - returns additional FSA coverage details",
          "example" : "sections = includeFSA"
        }
      },
      "description" : "A coverage structure used for searching"
    },
    "teamVdn" : {
      "type" : "object",
      "properties" : {
        "teamName" : {
          "type" : "string",
          "description" : "The name of the Business Team.\n\n**Returned only when sections=teamdetails**"
        },
        "teamMemberVdn" : {
          "type" : "string",
          "description" : "Vector Directory Number\n\n**Returned only when sections=teamdetails**"
        },
        "teamProviderVdn" : {
          "type" : "string",
          "description" : "The VDN for the Provider's inquiries of this customer.\n\n**Returned only when sections=teamdetails**"
        },
        "teamUmVdn" : {
          "type" : "string",
          "description" : "The VDN for the Utilization Management's inquiries of this customer.\n\n**Returned only when sections=teamdetails**"
        }
      }
    },
    "coverageSearchInput" : {
      "type" : "object",
      "properties" : {
        "cardId" : {
          "type" : "string",
          "description" : "CCID - for most member\nFEP members it would be the \"Rnnnnnnnn\" number\nMPL members it would be the 3 character alpha numeric prefix followed by \"74nnnnnnn'\nInternally this can also be used for HorizonId or subscribers SSN"
        },
        "subscriberId" : {
          "type" : "string",
          "description" : "Filter to a specific subscriber by subscriberId. This is a transient Id."
        },
        "subgroup" : {
          "$ref" : "#/definitions/subgroupSearchInput"
        },
        "lineOfBusiness" : {
          "type" : "string",
          "description" : "Line of business.  \n\nValues: \n* Medical\n* Dental\n* Vision\n*  Pharmacy Prescription Rx\n*  Mental Health  (future use)"
        },
        "searchStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If not supplied, all coverages less than or equal to the searchEndDate will be returned.  \n* If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n* If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "searchEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date to be used to find coverage.  \n* If neither searchStartDate or searchEndDate are supplied, then all coverages will be returned.  \n* If not supplied, all coverages greater than or equal to the searchStartDate will be returned.  \n* If both are supplied, any coverage that is active in any portion of the searchStartDate to searchEndDate range will be returned.  \n* If a single date of service is to be looked up, the searchStartDate and searchEndDate should be set to the same date.\n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "allowedAccess" : {
          "type" : "string",
          "description" : "Comma separated list of scope that the response should be filtered to.  Current values include:\n\n* **SelfService** - such services as Member Portal.   \n* **ViewPHI** - such services as Member Portal. \n* **GetCare** - for such services as Pager and types of services that support the members care\n* **All** - such services as Member Portal.",
          "example" : "allowedAccess=SelfService,GetCare,ViewPHI,All"
        },
        "sections" : {
          "type" : "string",
          "description" : "* **includeFSA** - returns additional FSA coverage details",
          "example" : "sections = includeFSA"
        }
      },
      "description" : "A coverage structure used for searching"
    },
    "responseCoverage" : {
      "type" : "object",
      "required" : [ "coverage", "memberId" ],
      "properties" : {
        "memberId" : {
          "type" : "string",
          "description" : "Unique Member identifier Note: This is a transient value"
        },
        "personId" : {
          "type" : "string",
          "description" : "Internal Only: Member’s unique identifier. Internally, this is the member GUID."
        },
        "coverage" : {
          "$ref" : "#/definitions/coverage"
        },
        "originalEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date  pertaining to the first time a member held coverage at Horizon  across all products, groups, and subgroups. Government programs are excluded.\n  ISO 8601 date in the format yyyy-MM-dd"
        },
        "cacheLastUpdated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date/Time in ISO 8601 date format yyyy-MM-dd’T’HH:mm:ss.SSS’Z’ “Z” - Zulu time of when the Mongo Cache was last updated"
        },
        "links" : {
          "type" : "array",
          "description" : "A collection of links",
          "items" : {
            "$ref" : "#/definitions/link"
          }
        }
      },
      "description" : "A single coverage structure with authorized members and internal properties."
    },
    "responseCoverages" : {
      "type" : "object",
      "required" : [ "memberId" ],
      "properties" : {
        "memberId" : {
          "type" : "string",
          "description" : "Unique Member identifier Note: This is a transient value.  This is needed to call other APIs"
        },
        "personId" : {
          "type" : "string",
          "description" : "Internal Only: Member’s unique identifier. Internally, this is the member GUID."
        },
        "coverages" : {
          "type" : "array",
          "description" : "A collection of coverages for the member",
          "items" : {
            "$ref" : "#/definitions/coverage"
          }
        },
        "originalEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date  pertaining to the first time a member held coverage at Horizon  across all products, groups, and subgroups. Government programs are excluded.\n  ISO 8601 date in the format yyyy-MM-dd"
        },
        "cacheLastUpdated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Max Date/Time  in ISO 8601 date format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\n\"Z\" - Zulu time of when the Mongo Cache was last updated based on all coverages returned in the response"
        },
        "links" : {
          "type" : "array",
          "description" : "A collection of links",
          "items" : {
            "$ref" : "#/definitions/link"
          }
        }
      },
      "description" : "A collection of coverages with authorized members and internal properties."
    },
    "responseMemberCoverages" : {
      "type" : "object",
      "properties" : {
        "responseCoverages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/responseCoverages"
          }
        },
        "fault" : {
          "$ref" : "#/definitions/fault"
        }
      }
    },
    "coverage" : {
      "type" : "object",
      "required" : [ "contractType", "coverageId", "effectiveDate", "exchangeIndicator", "lineOfBusiness", "links", "marketSegment", "medicareIndicator", "productId", "productName", "relationship", "subgroup", "subscriber", "terminationDate" ],
      "properties" : {
        "coverageId" : {
          "type" : "string",
          "description" : "Unique Coverage identifier Note: This is a transient value. It is necessary to make other API calls"
        },
        "subscriber" : {
          "$ref" : "#/definitions/subscriber"
        },
        "subgroup" : {
          "$ref" : "#/definitions/subgroup"
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date of the coverage.  This date is inclusive.  \n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "terminationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Termination date of the coverages. This date is inclusive, which means the member has coverage on this day.  \n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "productId" : {
          "type" : "string",
          "description" : "The product id (often referred to as the coverage code).  This will be unique for a given product for consumer and small group for a given time period, however, is not unique for midsize and above."
        },
        "productLineId" : {
          "type" : "string",
          "description" : "Product Line Id"
        },
        "productName" : {
          "type" : "string",
          "description" : "Product Name"
        },
        "contractType" : {
          "type" : "string",
          "description" : "Contract type.\n\nValues include:\n* Single\n* Family\n* Subscriber Spouse\n* Subscriber Children\n* Domestic Partners\n* Civil Union Partners\n* Husband and Wife, one over 65, one under 65\n* Full Family, one spouse over 65, one under 65"
        },
        "relationship" : {
          "type" : "string",
          "description" : "Relationship to the subscriber. \n\nValues: \n* Self\n* Spouse\n* Child\n* Adult Dependent\n* Class II or Sponsored\n* Dependents over 30 not covered under Subscriber\n* Handicap Child\n* Life Partner\n* Other Relationship\n* Unknown"
        },
        "allowedAccess" : {
          "type" : "array",
          "description" : "An array of scope that the current requesting member has for this particular member.  This could be empty or not returned if the requesting member does NOT have any access to this particular member's data.  This is used when applying the allowedAccess filter.\n\nCurrent scope:\n* **SelfService** - such services as Member Portal. \n* **ViewPHI** - such services as Member Portal.\n* **ViewSensitive** - such services as Member Portal.\n* **UpdateMember** - such services as Member Portal.     \n* **GetCare** - for such services as Pager and types of services that support the members care",
          "items" : {
            "type" : "string"
          }
        },
        "lineOfBusiness" : {
          "type" : "string",
          "description" : "Line of business.  \n\nValues: \n* Medical\n* Dental\n* Vision\n*  Pharmacy Prescription Rx\n*  Mental Health  (future use)"
        },
        "marketSegment" : {
          "type" : "string",
          "description" : "Market Segment.\n\nValues: \n* Individual\n* Small\n* Medicaid\n* National\n* Federal\n* State\n* Public\n* Senior\n* MidSize\n* Jumbo\n* Labor"
        },
        "marketSegmentCode" : {
          "type" : "string",
          "description" : "Market Segment Code"
        },
        "idCardScope" : {
          "type" : "string",
          "description" : "Indicates level of Id Card.\n Values:\n* member\n* family"
        },
        "medicareIndicator" : {
          "type" : "boolean",
          "description" : "Boolenan indicator if the product is a Medicare product"
        },
        "medigapIndicator" : {
          "type" : "boolean",
          "description" : "Boolean indicator if the product is a Medigap product"
        },
        "exchangeIndicator" : {
          "type" : "boolean",
          "description" : "Boolean indicator if this coverage is from the public exchange.  true (On Exchange),  false (Off Exchange)"
        },
        "pcpRequiredIndicator" : {
          "type" : "boolean",
          "description" : "Boolean indicator if pcp is required  true or false"
        },
        "metallicProductType" : {
          "type" : "string",
          "description" : "Product metallic level:  Platinum, Gold, Silver, Bronze"
        },
        "metallicProductSubType" : {
          "type" : "string",
          "description" : "Values for Product SubType\n \n* 0 - Non-Exchange variant \n* 1 - Exchange variant (no CSR) \n* 2 - Open to Indians below 300%FPL \n* 3 - Open to Indians above 300%FPL \n* 4 - 73% AV Level Silver Plan CSR \n* 5 - 87% AV Level Silver Plan CSR \n* 6 - 94% AV Level Silver Plan CSR"
        },
        "primacy" : {
          "type" : "array",
          "description" : "A collection of the primacy information of the coverage.  Often this will be a single record, however, primacy can change over the life of the coverages, so this will be returned as a collection.\n\nNote:  Primacy identifies when there are multiple coverages under a single subscriber/cardId.   COB defines across multiple coverages that are under different subscribers/cardIds or even different insurers.",
          "items" : {
            "$ref" : "#/definitions/primacy"
          }
        },
        "alternateIds" : {
          "type" : "array",
          "description" : "A collection of Exchange alternate ids.",
          "items" : {
            "$ref" : "#/definitions/alternateId"
          }
        },
        "premium" : {
          "$ref" : "#/definitions/premium"
        },
        "internal" : {
          "$ref" : "#/definitions/internal"
        },
        "links" : {
          "type" : "array",
          "description" : "A collection of links",
          "items" : {
            "$ref" : "#/definitions/link"
          }
        },
        "accounts" : {
          "type" : "array",
          "description" : "Values: FSA, HSA, HRA\n\n**Not returned when filters=summary**\n\n**Note: this indicator signifies that member is eligible to avail the type of spending account listed",
          "items" : {
            "type" : "string"
          }
        },
        "accountCategory" : {
          "type" : "string",
          "description" : "Values for accountCategory\n \n* MyWay - Horizon managed CDHP account\n* Compatible - Non-Horizon managed CDHP account\n \n**Not returned when filters=summary**"
        },
        "employmentType" : {
          "type" : "array",
          "description" : "Employment Type",
          "items" : {
            "$ref" : "#/definitions/employmentType"
          }
        }
      },
      "description" : "A single coverage structure - returns both internal and authorizedMembers in addition to all of the coverage properties"
    },
    "subscriber" : {
      "type" : "object",
      "required" : [ "cardId", "subscriberId" ],
      "properties" : {
        "subscriberId" : {
          "type" : "string",
          "description" : "Unique Subscriber  identifier. Note: This is a transient value. It  is necessary to make other API calls.  This is the member id of the subscriber."
        },
        "alphaPrefix" : {
          "type" : "string",
          "description" : "The contract alpha prefix associated with the given coverage."
        },
        "cardId" : {
          "type" : "string",
          "description" : "CCID - for most member \"3HZN+nnnnnnnn\"\nFEP members it would be the \"Rnnnnnnnn\" number\nMPL members it would be the 3 character alpha prefix followed by \"74nnnnnnn'"
        },
        "links" : {
          "type" : "array",
          "description" : "Collection of links.  At this time, a link to the subscribers member API and the subscriber API will be returned.",
          "items" : {
            "$ref" : "#/definitions/link"
          }
        }
      },
      "description" : "A single subscriber structure"
    },
    "subgroupSearchInput" : {
      "type" : "object",
      "properties" : {
        "mainGroupNumber" : {
          "type" : "string",
          "description" : "This is a 7 alphanumberic element that defines the main group number.  The number could represent an NMS or NASCO group number and is left padded with zeros to make a consistent 7 digit number"
        },
        "subGroupNumber" : {
          "type" : "string",
          "description" : "This is a 4 alphanumberic element that defines the subgroup number.  The number could represent an NMS subgroup or NASCO section number and is left padded with zeros to make a consistent 4 digit number"
        },
        "packageCode" : {
          "type" : "string",
          "description" : "This is a 3 alphanumeric that defines a NASCO package code.  Although at this time, it should be all numeric, alphas will be allowed for future support."
        }
      },
      "description" : "A subgroup structure used for searching"
    },
    "employmentType" : {
      "type" : "object",
      "properties" : {
        "employmentType" : {
          "type" : "string",
          "description" : "Values:\n\n* Employed\n* Cobra\n* Retiree"
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective Date\n\nFormat: ISO 8601 date in the format yyyy-MM-dd"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "End Date\n\nFormat: ISO 8601 date in the format yyyy-MM-dd"
        }
      }
    },
    "federalExchangeIndicators" : {
      "type" : "object",
      "required" : [ "alaskanNative", "americanIndian" ],
      "properties" : {
        "americanIndian" : {
          "type" : "boolean",
          "description" : "Indicator if the member is an American Indian.  Required for different exchange plans."
        },
        "alaskanNative" : {
          "type" : "boolean",
          "description" : "Indicator if the member is an Alaskan Native.  Required for different exchange plans."
        }
      }
    },
    "subgroup" : {
      "type" : "object",
      "required" : [ "mainGroupNumber", "subGroupName", "subGroupNumber" ],
      "properties" : {
        "subGroupName" : {
          "type" : "string",
          "description" : "Subgroup name"
        },
        "mainGroupNumber" : {
          "type" : "string",
          "description" : "This is a 7 alphanumberic element that defines the main group number.  The number could represent an NMS or NASCO group number and is left padded with zeros to make a consistent 7 digit number"
        },
        "subGroupNumber" : {
          "type" : "string",
          "description" : "This is a 4 alphanumberic element that defines the subgroup number.  The number could represent an NMS subgroup or NASCO section number and is left padded with zeros to make a consistent 4 digit number"
        },
        "packageCode" : {
          "type" : "string",
          "description" : "This is a 3 alphanumeric that defines a NASCO package code.  Although at this time, it should be all numeric, alphas will be allowed for future support."
        },
        "links" : {
          "type" : "array",
          "description" : "Future Use: Links to the group information",
          "items" : {
            "$ref" : "#/definitions/link"
          }
        }
      },
      "description" : "A single subgroup structure"
    },
    "primacy" : {
      "type" : "object",
      "required" : [ "primacyEffectiveDate", "primacyIndicator", "primacyTerminationDate" ],
      "properties" : {
        "primacyIndicator" : {
          "type" : "string",
          "description" : "Primacy Indicator.  Values: Primary, Secondary, Tertiary, or Other"
        },
        "primacyEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The effective date of the Primacy Indicator.  The date is inclusive.  \n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "primacyTerminationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The termination date of the Primacy Indicator.  The date is exclusive.  \n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        }
      },
      "description" : "A single primacy structure"
    },
    "internal" : {
      "type" : "object",
      "required" : [ "enrollmentSourceSystem", "routeCode" ],
      "properties" : {
        "horizonId" : {
          "type" : "string",
          "description" : "**Internal Only:** Horizon Id of the subscriber\n\n**Populated only when memberId is received in the URL**"
        },
        "routeCode" : {
          "type" : "string",
          "description" : "**Internal Only:** Route code of the particular coverage.  This is NOT the high-level single route code, but one that is specific to the coverage."
        },
        "claimProcessingSystemCode" : {
          "type" : "string",
          "description" : "**Internal Only:** Indicates the Claim System that administers the contract.  \n\nValid values are: ACE BCL ERI HNC HNN HIS HSQ LAT NAS NQH QHS QMA TPA."
        },
        "enrollmentSourceSystem" : {
          "type" : "string",
          "description" : "**Internal Only:** MEMNMS, MEMNAS, MEMMED, MEMNJH"
        },
        "ccidPlusNascoExt" : {
          "type" : "string",
          "description" : "**Internal Only:** CCID plus extent.  Used by 820 transaction for billing."
        },
        "prdChangeReasonCd" : {
          "type" : "string",
          "description" : "**Internal Only:** A code indicating the action which was taken to create or change the Subscriber's product (add or change) and the reason why the action was taken"
        },
        "preXCondCd" : {
          "type" : "string",
          "description" : "**Internal Only:** A code specifying the type of person for whom 'rider' claims, under the product, should be rejected for manual adjudication because of pre-existing health condition. Valid values:\n* 0 - Pre-X applies to Subscriber\n* 1 - Pre-X applies to Subscriber and Spouse\n* 2 - Pre-X applies to Spouse and Children\n* 3 - Pre-X applies to Subscriber, Spouse and Children\n* 4 - Pre-X applies to Subscriber and Children\n* 5 - Pre-X waived for Subscriber\n* 6 - Pre-X waived for Subscriber and Spouse\n* 7 - Pre-X waived for Spouse and Children\n* 8 - Pre-X waived for Subscriber, Spouse and Children\n* 9 - Pre-X waived for Subscriber and Children"
        },
        "waitPrdEndDt" : {
          "type" : "string",
          "format" : "date",
          "description" : "**Internal Only:** The date as of which a Subscriber needs no longer wait for claims to be paid for claims resulting from a Pre-Existing condition."
        }
      },
      "description" : "A single internal section structure"
    },
    "alternateId" : {
      "type" : "object",
      "required" : [ "id", "idEffectiveDate", "idTermDate", "idType" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Member Exchange Identifiers - Subscriber / Member                                                        SHOP and Individual Exchange Identifiers - FFE SHOP Exchange Identifier / FFE Individual Exchange Identifier"
        },
        "idType" : {
          "type" : "string",
          "description" : "Member Exchange Identifier Type - current values\n* HIE_EXSID - Health Information Exchange Subscriber ID\n* HIE_EXMID - Health Information Exchange Member ID"
        },
        "idEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The effective start date of the id.\n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        },
        "idTermDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The termination date of the id.  This date is inclusive.\n\n**Format: ISO 8601 date in the format yyyy-MM-dd**"
        }
      },
      "description" : "A single Exchange alternate id structure."
    },
    "premium" : {
      "type" : "object",
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "description" : "Premium payment account number.  This can be on exchange or off exchange."
        },
        "subsidy" : {
          "$ref" : "#/definitions/premiumSubsidy"
        }
      }
    },
    "premiumSubsidy" : {
      "type" : "object",
      "properties" : {
        "costSharingReductionIndicator" : {
          "type" : "string",
          "description" : "Cost sharing reduction indicator."
        },
        "amount" : {
          "type" : "number",
          "format" : "float",
          "description" : "Dollar amount of the subsidy"
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date of the subsidy\n\n**Format: yyyy-MM-dd**"
        },
        "termDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Term date of the subsidy\n\n**Format: yyyy-MM-dd**"
        }
      },
      "description" : "A single premium subsidy structure"
    },
    "link" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The link relationship type.  Current values include:\nself\nsubscriber\nmember\ncoverage"
        },
        "href" : {
          "type" : "string",
          "description" : "The hyperlink reference to a resource as applicable.\n\nExample:\n* \"https://api.horizonblue.com/v1/members/M3/coverages\"\n* \"https://api.horizonblue.com/v1/subscribers/S3/coverages\"\n* \"https://api.horizonblue.com/v1/members/M3/coverages/C9\"\n* \"https://api.horizonblue.com/v1/subscribers/S3/coverages/C9\""
        }
      },
      "description" : "A single link structure"
    },
    "responseFailure" : {
      "type" : "object",
      "required" : [ "fault" ],
      "properties" : {
        "fault" : {
          "$ref" : "#/definitions/fault"
        }
      },
      "description" : "The response payload on a failure"
    },
    "fault" : {
      "type" : "object",
      "required" : [ "errorLevel", "httpErrorCode", "message", "payloadErrorCode", "retryable" ],
      "properties" : {
        "errorLevel" : {
          "type" : "string",
          "description" : "Error level of the response.  Values include:\nVALIDATION, ERROR, WARNING, INFORMATIONAL.\nIf there are multiple errors returned, this will be the most severe error level."
        },
        "httpErrorCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "HTTP Error Code as defined in the Operation."
        },
        "message" : {
          "type" : "string",
          "description" : "Text of the error"
        },
        "payloadErrorCode" : {
          "type" : "string",
          "description" : "High level error code of the API.  This is a unique code defined by the API."
        },
        "retryable" : {
          "type" : "boolean",
          "description" : "Defines if the type of error is transient and the request could be retried."
        },
        "errorDetails" : {
          "type" : "array",
          "description" : "List of general errors",
          "items" : {
            "$ref" : "#/definitions/errorDetails"
          }
        },
        "validationErrorDetails" : {
          "type" : "array",
          "description" : "List of validation errors",
          "items" : {
            "$ref" : "#/definitions/validationErrorDetails"
          }
        }
      },
      "description" : "A single fault structure"
    },
    "errorDetails" : {
      "type" : "object",
      "required" : [ "errorLevel", "message" ],
      "properties" : {
        "errorCode" : {
          "type" : "string",
          "description" : "**for internal use:** error code from the backend system(s)"
        },
        "errorLevel" : {
          "type" : "string",
          "description" : "**for internal use:** error level.  Values include:\nERROR, WARNING, INFORMATIONAL"
        },
        "message" : {
          "type" : "string",
          "description" : "**for internal use:**  the error text from the backend system(s)"
        }
      },
      "description" : "A single error detail structure"
    },
    "validationErrorDetails" : {
      "type" : "object",
      "required" : [ "field", "message", "name", "value" ],
      "properties" : {
        "field" : {
          "type" : "string",
          "description" : "field that failed validation"
        },
        "message" : {
          "type" : "string",
          "description" : "description of the failed validation"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the api that has the validation error"
        },
        "value" : {
          "type" : "string",
          "description" : "value that failed the validation"
        }
      },
      "description" : "A single validation error detail"
    },
    "memberId" : {
      "type" : "object",
      "properties" : {
        "memberId" : {
          "type" : "string",
          "description" : "Unique Member identifier. Note: This is a transient value."
        }
      }
    },
    "personId" : {
      "type" : "object",
      "properties" : {
        "personId" : {
          "type" : "string",
          "description" : "Internal Only: Member’s unique identifier. Internally, this is the member GUID."
        }
      }
    },
    "responseSubscribersPartial" : {
      "type" : "object",
      "required" : [ "cardId", "subscriberId" ],
      "properties" : {
        "subscriberId" : {
          "type" : "string",
          "description" : "Unique Subscriber  identifier. Note: This is a transient value. It  is necessary to make other API calls.  This is the member id of the subscriber."
        },
        "cardId" : {
          "type" : "string",
          "description" : "CCID - for most member \"3HZN+nnnnnnnn\"\nFEP members it would be the \"Rnnnnnnnn\" number\nMPL members it would be the 3 character alpha prefix followed by \"74nnnnnnn'"
        },
        "horizonId" : {
          "type" : "string",
          "description" : "**Internal Only:** Horizon Id of the subscriber"
        },
        "ssn" : {
          "type" : "string",
          "description" : "**Internal Only:** Subscriber's SSN.   Format nnnnnnnnn.\n\n**Not returned when filters=summary**"
        },
        "prefix" : {
          "type" : "string",
          "description" : "Subscriber's name prefix\n\n**Not returned when filters=summary**"
        },
        "firstName" : {
          "type" : "string",
          "description" : "Subscriber's first name"
        },
        "middleName" : {
          "type" : "string",
          "description" : "Subscriber's middle name\n\n**Not returned when filters=summary**"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Subscriber's last name"
        },
        "suffix" : {
          "type" : "string",
          "description" : "Subscriber's name suffix\n\n**Not returned when filters=summary**"
        },
        "dob" : {
          "type" : "string",
          "description" : "Subscriber's Date of Birth. Format yyyy-MM-dd\n\n**Not returned when filters=summary**"
        },
        "gender" : {
          "type" : "string",
          "description" : "Member's gender. \n\nValues:\n* Female\n* Male\n* Ambiguous\n* Not Applicable\n* Other\n* Unknown\n\n**Not returned when filters=summary**"
        },
        "routeCode" : {
          "type" : "string",
          "description" : "This is the high-level single route code.\n\n**Returned only when sections=routecode or teamdetails**"
        },
        "claimProcessingSystemCode" : {
          "type" : "string",
          "description" : "This is the high level Claim System that administers the contract.  \n\nValid values are: ACE BCL ERI HNC HNN HIS HSQ LAT NAS NQH QHS QMA TPA.\n\n**Returned only when sections=routecode or teamdetails**"
        },
        "teamDetails" : {
          "$ref" : "#/definitions/teamVdn"
        },
        "typeOfMatch" : {
          "type" : "string",
          "description" : "Indicates  the match result. This is only applicable  when matchType EXACT or BEST received on the request (for /subscribers/coverages/search)\n\nWhen matchType **EXACT** received on request\n* SubscriberId found, Exact Match Failed\n* Successful match\n\nWhen matchType  **BEST** received on request\n* Partial Match on dob \n* Partial Match on firstName\n* Subscriber not found\n* Multiple Matching Members, Best Match Failed\n* SubscriberId Found, Best Match Failed\n* Partial Match on firstName and lastName\n* Successful match\n\n**Returned only for POST /subscribers/coverages/search**"
        },
        "members" : {
          "type" : "array",
          "description" : "A collection of members under this subscriber.  The subscriber will also have a record under this collection.\n\nShould always have at least a single record for the subscriber record.",
          "items" : {
            "$ref" : "#/definitions/member"
          }
        },
        "hipaaRuleVersion" : {
          "type" : "string",
          "description" : "HIPAA rule version\n\n1.0 - access opt out rule\n\n2.0 - role based rule"
        },
        "links" : {
          "type" : "array",
          "description" : "Collection of links.  At this time, a link to the subscribers member API and the subscriber API will be returned.",
          "items" : {
            "$ref" : "#/definitions/link"
          }
        },
        "fault" : {
          "$ref" : "#/definitions/fault"
        }
      },
      "description" : "A composite subscriber structure when response is partial "
    }
  }
}